package org.cyanotic.cx10.io;

import org.cyanotic.cx10.utils.ByteUtils;
import org.junit.Before;
import org.junit.Test;

import static org.junit.Assert.assertArrayEquals;

/**
 * Created by cyanotic on 24/11/2016.
 */
public class CX10InputStreamReaderTest {
    public byte[] test1 = ByteUtils.asUnsigned(
            0x00, 0x00, 0x01, 0xA0, 0x11,
            0x11, 0x11, 0x11, 0x11, 0x11,
            0x11, 0x11, 0x11, 0x11, 0x11,
            0x11, 0x11, 0x11, 0x11, 0x11,
            0x11, 0x11, 0x11, 0x01, 0x11,
            0x11, 0x11, 0x11, 0x01, 0x11,
            0x11, 0x11, 0x11, 0x01, 0x11,
            0x11, 0x11, 0x11, 0x11, 0x11,
            0x12, 0x13, 0x14, 0x15);
    public byte[] inputNal = ByteUtils.asUnsigned(
            0x00, 0x00, 0x01, 0xA0, 0x00,
            0x06, 0x00, 0x03, 0x30, 0x0B,
            0x00, 0x00, 0x1D, 0x5C, 0x8B,
            0x3C, 0x01, 0x5D, 0x03, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xD0,
            0x02, 0x40, 0x02, 0x00, 0x02,
            0x00, 0x00, 0x30, 0x0B, 0x00,
            0x00, 0x19, 0x00, 0x00, 0x00);
    public byte[] outputNal = ByteUtils.asUnsigned(
            0x01, 0x00, 0x00, 0x19, 0xD0,
            0x02, 0x40, 0x02, 0x1D, 0x5C,
            0x8B, 0x3C, 0x01, 0x5D, 0x03,
            0x00, 0x06, 0x00, 0x0B, 0x30,
            0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00);
    public byte[] inputNal2 = ByteUtils.asUnsigned(
            0x00, 0x00, 0x01, 0xA0, 0x00,
            0x08, 0x00, 0x03, 0x6B, 0x0A,
            0x00, 0x00, 0x92, 0x94, 0x8C,
            0x3C, 0x01, 0x5D, 0x03, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xD0,
            0x02, 0x40, 0x02, 0x00, 0x02,
            0x00, 0x00, 0x6B, 0x0A, 0x00,
            0x00, 0x19, 0x00, 0x00, 0x00);
    public byte[] outputNal2 = ByteUtils.asUnsigned(
            0x01, 0x00, 0x00, 0x19, 0xD0,
            0x02, 0x40, 0x02, 0x92, 0x94,
            0x8C, 0x3C, 0x01, 0x5D, 0x03,
            0x00, 0x08, 0x00, 0x0A, 0x6B,
            0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00);
    private CX10InputStreamReader streamReader;

    @Before
    public void setUp() throws Exception {
        streamReader = new CX10InputStreamReader();
    }

    @Test
    public void feed_headerBegin() throws Exception {
        byte[] feed = streamReader.feed(test1);
        byte[] expecteds = ByteUtils.asUnsigned(0x12, 0x13, 0x14, 0x15);
        assertArrayEquals(expecteds, feed);
    }

    @Test
    public void replaceNal1() {
        byte[] resNal = streamReader.replaceNal(inputNal);
        assertArrayEquals(outputNal, resNal);
    }

    @Test
    public void replaceNal2() {
        byte[] resNal = streamReader.replaceNal(inputNal2);
        assertArrayEquals(outputNal2, resNal);
    }

}